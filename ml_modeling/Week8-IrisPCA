{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of Week8-IrisPCA","provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["**Principal Component Analysis**"],"metadata":{"id":"Je60IZ5LOAMe"}},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sAMNc-_aOAnt","executionInfo":{"status":"ok","timestamp":1645569962245,"user_tz":300,"elapsed":787,"user":{"displayName":"Gray LeCompte","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13282743667567499117"}},"outputId":"5d231f10-086f-4776-8463-ee2a6e7f414d"},"outputs":[{"output_type":"stream","name":"stdout","text":["150\n","4\n","['setosa', 'versicolor', 'virginica']\n"]}],"source":["from sklearn.datasets import load_iris\n","from sklearn.decomposition import PCA\n","import pylab as pl\n","from itertools import cycle\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","from pylab import *\n","import pandas as pd\n","\n","iris = load_iris()\n","\n","#print iris\n","\n","numSamples, numFeatures = iris.data.shape\n","print(numSamples)\n","print(numFeatures)\n","print(list(iris.target_names))"]},{"cell_type":"code","source":["from sklearn.tree import DecisionTreeClassifier\n"],"metadata":{"id":"awXVH8liTDCJ","executionInfo":{"status":"ok","timestamp":1645569962246,"user_tz":300,"elapsed":3,"user":{"displayName":"Gray LeCompte","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13282743667567499117"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["iris.data[:5]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"K1OqDm5CN_UC","executionInfo":{"status":"ok","timestamp":1645569962504,"user_tz":300,"elapsed":260,"user":{"displayName":"Gray LeCompte","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13282743667567499117"}},"outputId":"88cae1f6-2b1a-45df-f08b-119be0982306"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[5.1, 3.5, 1.4, 0.2],\n","       [4.9, 3. , 1.4, 0.2],\n","       [4.7, 3.2, 1.3, 0.2],\n","       [4.6, 3.1, 1.5, 0.2],\n","       [5. , 3.6, 1.4, 0.2]])"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["iris.target_names"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OEbkR_lIOI5Q","executionInfo":{"status":"ok","timestamp":1645569962505,"user_tz":300,"elapsed":16,"user":{"displayName":"Gray LeCompte","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13282743667567499117"}},"outputId":"456547fc-c0c5-443b-cc32-2e5fb7fafa11"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['setosa', 'versicolor', 'virginica'], dtype='<U10')"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["iris"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8Wtt5Z2YOKWY","executionInfo":{"status":"ok","timestamp":1645569962505,"user_tz":300,"elapsed":14,"user":{"displayName":"Gray LeCompte","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13282743667567499117"}},"outputId":"27964b67-12c1-4a0a-ff75-cc14c942a808"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'DESCR': '.. _iris_dataset:\\n\\nIris plants dataset\\n--------------------\\n\\n**Data Set Characteristics:**\\n\\n    :Number of Instances: 150 (50 in each of three classes)\\n    :Number of Attributes: 4 numeric, predictive attributes and the class\\n    :Attribute Information:\\n        - sepal length in cm\\n        - sepal width in cm\\n        - petal length in cm\\n        - petal width in cm\\n        - class:\\n                - Iris-Setosa\\n                - Iris-Versicolour\\n                - Iris-Virginica\\n                \\n    :Summary Statistics:\\n\\n    ============== ==== ==== ======= ===== ====================\\n                    Min  Max   Mean    SD   Class Correlation\\n    ============== ==== ==== ======= ===== ====================\\n    sepal length:   4.3  7.9   5.84   0.83    0.7826\\n    sepal width:    2.0  4.4   3.05   0.43   -0.4194\\n    petal length:   1.0  6.9   3.76   1.76    0.9490  (high!)\\n    petal width:    0.1  2.5   1.20   0.76    0.9565  (high!)\\n    ============== ==== ==== ======= ===== ====================\\n\\n    :Missing Attribute Values: None\\n    :Class Distribution: 33.3% for each of 3 classes.\\n    :Creator: R.A. Fisher\\n    :Donor: Michael Marshall (MARSHALL%PLU@io.arc.nasa.gov)\\n    :Date: July, 1988\\n\\nThe famous Iris database, first used by Sir R.A. Fisher. The dataset is taken\\nfrom Fisher\\'s paper. Note that it\\'s the same as in R, but not as in the UCI\\nMachine Learning Repository, which has two wrong data points.\\n\\nThis is perhaps the best known database to be found in the\\npattern recognition literature.  Fisher\\'s paper is a classic in the field and\\nis referenced frequently to this day.  (See Duda & Hart, for example.)  The\\ndata set contains 3 classes of 50 instances each, where each class refers to a\\ntype of iris plant.  One class is linearly separable from the other 2; the\\nlatter are NOT linearly separable from each other.\\n\\n.. topic:: References\\n\\n   - Fisher, R.A. \"The use of multiple measurements in taxonomic problems\"\\n     Annual Eugenics, 7, Part II, 179-188 (1936); also in \"Contributions to\\n     Mathematical Statistics\" (John Wiley, NY, 1950).\\n   - Duda, R.O., & Hart, P.E. (1973) Pattern Classification and Scene Analysis.\\n     (Q327.D83) John Wiley & Sons.  ISBN 0-471-22361-1.  See page 218.\\n   - Dasarathy, B.V. (1980) \"Nosing Around the Neighborhood: A New System\\n     Structure and Classification Rule for Recognition in Partially Exposed\\n     Environments\".  IEEE Transactions on Pattern Analysis and Machine\\n     Intelligence, Vol. PAMI-2, No. 1, 67-71.\\n   - Gates, G.W. (1972) \"The Reduced Nearest Neighbor Rule\".  IEEE Transactions\\n     on Information Theory, May 1972, 431-433.\\n   - See also: 1988 MLC Proceedings, 54-64.  Cheeseman et al\"s AUTOCLASS II\\n     conceptual clustering system finds 3 classes in the data.\\n   - Many, many more ...',\n"," 'data': array([[5.1, 3.5, 1.4, 0.2],\n","        [4.9, 3. , 1.4, 0.2],\n","        [4.7, 3.2, 1.3, 0.2],\n","        [4.6, 3.1, 1.5, 0.2],\n","        [5. , 3.6, 1.4, 0.2],\n","        [5.4, 3.9, 1.7, 0.4],\n","        [4.6, 3.4, 1.4, 0.3],\n","        [5. , 3.4, 1.5, 0.2],\n","        [4.4, 2.9, 1.4, 0.2],\n","        [4.9, 3.1, 1.5, 0.1],\n","        [5.4, 3.7, 1.5, 0.2],\n","        [4.8, 3.4, 1.6, 0.2],\n","        [4.8, 3. , 1.4, 0.1],\n","        [4.3, 3. , 1.1, 0.1],\n","        [5.8, 4. , 1.2, 0.2],\n","        [5.7, 4.4, 1.5, 0.4],\n","        [5.4, 3.9, 1.3, 0.4],\n","        [5.1, 3.5, 1.4, 0.3],\n","        [5.7, 3.8, 1.7, 0.3],\n","        [5.1, 3.8, 1.5, 0.3],\n","        [5.4, 3.4, 1.7, 0.2],\n","        [5.1, 3.7, 1.5, 0.4],\n","        [4.6, 3.6, 1. , 0.2],\n","        [5.1, 3.3, 1.7, 0.5],\n","        [4.8, 3.4, 1.9, 0.2],\n","        [5. , 3. , 1.6, 0.2],\n","        [5. , 3.4, 1.6, 0.4],\n","        [5.2, 3.5, 1.5, 0.2],\n","        [5.2, 3.4, 1.4, 0.2],\n","        [4.7, 3.2, 1.6, 0.2],\n","        [4.8, 3.1, 1.6, 0.2],\n","        [5.4, 3.4, 1.5, 0.4],\n","        [5.2, 4.1, 1.5, 0.1],\n","        [5.5, 4.2, 1.4, 0.2],\n","        [4.9, 3.1, 1.5, 0.2],\n","        [5. , 3.2, 1.2, 0.2],\n","        [5.5, 3.5, 1.3, 0.2],\n","        [4.9, 3.6, 1.4, 0.1],\n","        [4.4, 3. , 1.3, 0.2],\n","        [5.1, 3.4, 1.5, 0.2],\n","        [5. , 3.5, 1.3, 0.3],\n","        [4.5, 2.3, 1.3, 0.3],\n","        [4.4, 3.2, 1.3, 0.2],\n","        [5. , 3.5, 1.6, 0.6],\n","        [5.1, 3.8, 1.9, 0.4],\n","        [4.8, 3. , 1.4, 0.3],\n","        [5.1, 3.8, 1.6, 0.2],\n","        [4.6, 3.2, 1.4, 0.2],\n","        [5.3, 3.7, 1.5, 0.2],\n","        [5. , 3.3, 1.4, 0.2],\n","        [7. , 3.2, 4.7, 1.4],\n","        [6.4, 3.2, 4.5, 1.5],\n","        [6.9, 3.1, 4.9, 1.5],\n","        [5.5, 2.3, 4. , 1.3],\n","        [6.5, 2.8, 4.6, 1.5],\n","        [5.7, 2.8, 4.5, 1.3],\n","        [6.3, 3.3, 4.7, 1.6],\n","        [4.9, 2.4, 3.3, 1. ],\n","        [6.6, 2.9, 4.6, 1.3],\n","        [5.2, 2.7, 3.9, 1.4],\n","        [5. , 2. , 3.5, 1. ],\n","        [5.9, 3. , 4.2, 1.5],\n","        [6. , 2.2, 4. , 1. ],\n","        [6.1, 2.9, 4.7, 1.4],\n","        [5.6, 2.9, 3.6, 1.3],\n","        [6.7, 3.1, 4.4, 1.4],\n","        [5.6, 3. , 4.5, 1.5],\n","        [5.8, 2.7, 4.1, 1. ],\n","        [6.2, 2.2, 4.5, 1.5],\n","        [5.6, 2.5, 3.9, 1.1],\n","        [5.9, 3.2, 4.8, 1.8],\n","        [6.1, 2.8, 4. , 1.3],\n","        [6.3, 2.5, 4.9, 1.5],\n","        [6.1, 2.8, 4.7, 1.2],\n","        [6.4, 2.9, 4.3, 1.3],\n","        [6.6, 3. , 4.4, 1.4],\n","        [6.8, 2.8, 4.8, 1.4],\n","        [6.7, 3. , 5. , 1.7],\n","        [6. , 2.9, 4.5, 1.5],\n","        [5.7, 2.6, 3.5, 1. ],\n","        [5.5, 2.4, 3.8, 1.1],\n","        [5.5, 2.4, 3.7, 1. ],\n","        [5.8, 2.7, 3.9, 1.2],\n","        [6. , 2.7, 5.1, 1.6],\n","        [5.4, 3. , 4.5, 1.5],\n","        [6. , 3.4, 4.5, 1.6],\n","        [6.7, 3.1, 4.7, 1.5],\n","        [6.3, 2.3, 4.4, 1.3],\n","        [5.6, 3. , 4.1, 1.3],\n","        [5.5, 2.5, 4. , 1.3],\n","        [5.5, 2.6, 4.4, 1.2],\n","        [6.1, 3. , 4.6, 1.4],\n","        [5.8, 2.6, 4. , 1.2],\n","        [5. , 2.3, 3.3, 1. ],\n","        [5.6, 2.7, 4.2, 1.3],\n","        [5.7, 3. , 4.2, 1.2],\n","        [5.7, 2.9, 4.2, 1.3],\n","        [6.2, 2.9, 4.3, 1.3],\n","        [5.1, 2.5, 3. , 1.1],\n","        [5.7, 2.8, 4.1, 1.3],\n","        [6.3, 3.3, 6. , 2.5],\n","        [5.8, 2.7, 5.1, 1.9],\n","        [7.1, 3. , 5.9, 2.1],\n","        [6.3, 2.9, 5.6, 1.8],\n","        [6.5, 3. , 5.8, 2.2],\n","        [7.6, 3. , 6.6, 2.1],\n","        [4.9, 2.5, 4.5, 1.7],\n","        [7.3, 2.9, 6.3, 1.8],\n","        [6.7, 2.5, 5.8, 1.8],\n","        [7.2, 3.6, 6.1, 2.5],\n","        [6.5, 3.2, 5.1, 2. ],\n","        [6.4, 2.7, 5.3, 1.9],\n","        [6.8, 3. , 5.5, 2.1],\n","        [5.7, 2.5, 5. , 2. ],\n","        [5.8, 2.8, 5.1, 2.4],\n","        [6.4, 3.2, 5.3, 2.3],\n","        [6.5, 3. , 5.5, 1.8],\n","        [7.7, 3.8, 6.7, 2.2],\n","        [7.7, 2.6, 6.9, 2.3],\n","        [6. , 2.2, 5. , 1.5],\n","        [6.9, 3.2, 5.7, 2.3],\n","        [5.6, 2.8, 4.9, 2. ],\n","        [7.7, 2.8, 6.7, 2. ],\n","        [6.3, 2.7, 4.9, 1.8],\n","        [6.7, 3.3, 5.7, 2.1],\n","        [7.2, 3.2, 6. , 1.8],\n","        [6.2, 2.8, 4.8, 1.8],\n","        [6.1, 3. , 4.9, 1.8],\n","        [6.4, 2.8, 5.6, 2.1],\n","        [7.2, 3. , 5.8, 1.6],\n","        [7.4, 2.8, 6.1, 1.9],\n","        [7.9, 3.8, 6.4, 2. ],\n","        [6.4, 2.8, 5.6, 2.2],\n","        [6.3, 2.8, 5.1, 1.5],\n","        [6.1, 2.6, 5.6, 1.4],\n","        [7.7, 3. , 6.1, 2.3],\n","        [6.3, 3.4, 5.6, 2.4],\n","        [6.4, 3.1, 5.5, 1.8],\n","        [6. , 3. , 4.8, 1.8],\n","        [6.9, 3.1, 5.4, 2.1],\n","        [6.7, 3.1, 5.6, 2.4],\n","        [6.9, 3.1, 5.1, 2.3],\n","        [5.8, 2.7, 5.1, 1.9],\n","        [6.8, 3.2, 5.9, 2.3],\n","        [6.7, 3.3, 5.7, 2.5],\n","        [6.7, 3. , 5.2, 2.3],\n","        [6.3, 2.5, 5. , 1.9],\n","        [6.5, 3. , 5.2, 2. ],\n","        [6.2, 3.4, 5.4, 2.3],\n","        [5.9, 3. , 5.1, 1.8]]),\n"," 'data_module': 'sklearn.datasets.data',\n"," 'feature_names': ['sepal length (cm)',\n","  'sepal width (cm)',\n","  'petal length (cm)',\n","  'petal width (cm)'],\n"," 'filename': 'iris.csv',\n"," 'frame': None,\n"," 'target': array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","        0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n","        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n","        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]),\n"," 'target_names': array(['setosa', 'versicolor', 'virginica'], dtype='<U10')}"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["#convert to a dataframe\n","df = pd.DataFrame(iris.data, columns = iris.feature_names)\n","#create the species column\n","df['Species'] = iris.target"],"metadata":{"id":"RP923lx8Unoo","executionInfo":{"status":"ok","timestamp":1645569962505,"user_tz":300,"elapsed":12,"user":{"displayName":"Gray LeCompte","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13282743667567499117"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"UFT5bYtRU9_X","executionInfo":{"status":"ok","timestamp":1645569962505,"user_tz":300,"elapsed":12,"user":{"displayName":"Gray LeCompte","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13282743667567499117"}},"outputId":"22bd40c7-958e-427d-8ce9-483f953e186b"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-a756aab3-288e-4cc6-ba32-23e66b71d976\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sepal length (cm)</th>\n","      <th>sepal width (cm)</th>\n","      <th>petal length (cm)</th>\n","      <th>petal width (cm)</th>\n","      <th>Species</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5.1</td>\n","      <td>3.5</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4.9</td>\n","      <td>3.0</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4.7</td>\n","      <td>3.2</td>\n","      <td>1.3</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4.6</td>\n","      <td>3.1</td>\n","      <td>1.5</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5.0</td>\n","      <td>3.6</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>145</th>\n","      <td>6.7</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.3</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>6.3</td>\n","      <td>2.5</td>\n","      <td>5.0</td>\n","      <td>1.9</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>6.5</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>6.2</td>\n","      <td>3.4</td>\n","      <td>5.4</td>\n","      <td>2.3</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>5.9</td>\n","      <td>3.0</td>\n","      <td>5.1</td>\n","      <td>1.8</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>150 rows × 5 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a756aab3-288e-4cc6-ba32-23e66b71d976')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a756aab3-288e-4cc6-ba32-23e66b71d976 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a756aab3-288e-4cc6-ba32-23e66b71d976');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["     sepal length (cm)  sepal width (cm)  ...  petal width (cm)  Species\n","0                  5.1               3.5  ...               0.2        0\n","1                  4.9               3.0  ...               0.2        0\n","2                  4.7               3.2  ...               0.2        0\n","3                  4.6               3.1  ...               0.2        0\n","4                  5.0               3.6  ...               0.2        0\n","..                 ...               ...  ...               ...      ...\n","145                6.7               3.0  ...               2.3        2\n","146                6.3               2.5  ...               1.9        2\n","147                6.5               3.0  ...               2.0        2\n","148                6.2               3.4  ...               2.3        2\n","149                5.9               3.0  ...               1.8        2\n","\n","[150 rows x 5 columns]"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"ksPsY1FvU3_7","executionInfo":{"status":"ok","timestamp":1645569962506,"user_tz":300,"elapsed":12,"user":{"displayName":"Gray LeCompte","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13282743667567499117"}},"outputId":"44f66f8a-1163-43dc-cbc7-fe056c7e0b82"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-85b09431-fade-44cc-8e3c-0091321d7c8f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sepal length (cm)</th>\n","      <th>sepal width (cm)</th>\n","      <th>petal length (cm)</th>\n","      <th>petal width (cm)</th>\n","      <th>Species</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>150.000000</td>\n","      <td>150.000000</td>\n","      <td>150.000000</td>\n","      <td>150.000000</td>\n","      <td>150.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>5.843333</td>\n","      <td>3.057333</td>\n","      <td>3.758000</td>\n","      <td>1.199333</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.828066</td>\n","      <td>0.435866</td>\n","      <td>1.765298</td>\n","      <td>0.762238</td>\n","      <td>0.819232</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>4.300000</td>\n","      <td>2.000000</td>\n","      <td>1.000000</td>\n","      <td>0.100000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>5.100000</td>\n","      <td>2.800000</td>\n","      <td>1.600000</td>\n","      <td>0.300000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>5.800000</td>\n","      <td>3.000000</td>\n","      <td>4.350000</td>\n","      <td>1.300000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>6.400000</td>\n","      <td>3.300000</td>\n","      <td>5.100000</td>\n","      <td>1.800000</td>\n","      <td>2.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>7.900000</td>\n","      <td>4.400000</td>\n","      <td>6.900000</td>\n","      <td>2.500000</td>\n","      <td>2.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-85b09431-fade-44cc-8e3c-0091321d7c8f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-85b09431-fade-44cc-8e3c-0091321d7c8f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-85b09431-fade-44cc-8e3c-0091321d7c8f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["       sepal length (cm)  sepal width (cm)  ...  petal width (cm)     Species\n","count         150.000000        150.000000  ...        150.000000  150.000000\n","mean            5.843333          3.057333  ...          1.199333    1.000000\n","std             0.828066          0.435866  ...          0.762238    0.819232\n","min             4.300000          2.000000  ...          0.100000    0.000000\n","25%             5.100000          2.800000  ...          0.300000    0.000000\n","50%             5.800000          3.000000  ...          1.300000    1.000000\n","75%             6.400000          3.300000  ...          1.800000    2.000000\n","max             7.900000          4.400000  ...          2.500000    2.000000\n","\n","[8 rows x 5 columns]"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["#extract features and target variables\n","x = df.drop(columns=\"Species\")\n","y = df[\"Species\"]"],"metadata":{"id":"l-Y1JMHFUNMq","executionInfo":{"status":"ok","timestamp":1645569962506,"user_tz":300,"elapsed":11,"user":{"displayName":"Gray LeCompte","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13282743667567499117"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["#split the dataset\n","from sklearn.model_selection import train_test_split\n","X_train, test_x, y_train, test_lab = train_test_split(x,y,\n","                                                 test_size = 0.4,\n","                                                 random_state = 42)"],"metadata":{"id":"kE5H3lVCVY5x","executionInfo":{"status":"ok","timestamp":1645569962506,"user_tz":300,"elapsed":11,"user":{"displayName":"Gray LeCompte","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13282743667567499117"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["clf = DecisionTreeClassifier(max_depth =3, random_state = 42)\n","clf.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wyDhR6bgVg4B","executionInfo":{"status":"ok","timestamp":1645569962507,"user_tz":300,"elapsed":12,"user":{"displayName":"Gray LeCompte","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13282743667567499117"}},"outputId":"6f43504d-5ecf-4618-c984-15112d368cc7"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DecisionTreeClassifier(max_depth=3, random_state=42)"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["test_pred_decision_tree = clf.predict(test_x)"],"metadata":{"id":"Hm37wUneVq4U","executionInfo":{"status":"ok","timestamp":1645569962507,"user_tz":300,"elapsed":8,"user":{"displayName":"Gray LeCompte","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13282743667567499117"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["#import the relevant packages\n","from sklearn import metrics\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","#get the confusion matrix\n","confusion_matrix = metrics.confusion_matrix(test_lab,  \n","                                            test_pred_decision_tree)\n","print(confusion_matrix)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5PmXQEAjVx9R","executionInfo":{"status":"ok","timestamp":1645569962866,"user_tz":300,"elapsed":366,"user":{"displayName":"Gray LeCompte","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13282743667567499117"}},"outputId":"5999c7f1-50ce-4537-e539-ac796db36d53"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["[[23  0  0]\n"," [ 0 19  0]\n"," [ 0  1 17]]\n"]}]},{"cell_type":"code","source":["metrics.accuracy_score(test_lab, test_pred_decision_tree)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VT3VLSkMV7p5","executionInfo":{"status":"ok","timestamp":1645569962866,"user_tz":300,"elapsed":7,"user":{"displayName":"Gray LeCompte","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13282743667567499117"}},"outputId":"91521beb-fba9-4657-878a-2d300aa75d66"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9833333333333333"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["#X = iris.data\n","pca = PCA(n_components=2).fit(x)\n","X_pca = pca.transform(x)"],"metadata":{"id":"S4gx-GwWOME-","executionInfo":{"status":"ok","timestamp":1645569962866,"user_tz":300,"elapsed":5,"user":{"displayName":"Gray LeCompte","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13282743667567499117"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["print(pca.explained_variance_ratio_)\n","print(sum(pca.explained_variance_ratio_))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wEDw87tsOPfe","executionInfo":{"status":"ok","timestamp":1645569962867,"user_tz":300,"elapsed":6,"user":{"displayName":"Gray LeCompte","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13282743667567499117"}},"outputId":"e55a1d62-faad-4ad5-d918-f41d93c24592"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.92461872 0.05306648]\n","0.977685206318795\n"]}]},{"cell_type":"code","source":[""],"metadata":{"id":"fWZuZwFcT_rW","executionInfo":{"status":"ok","timestamp":1645569962867,"user_tz":300,"elapsed":5,"user":{"displayName":"Gray LeCompte","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13282743667567499117"}}},"execution_count":16,"outputs":[]},{"cell_type":"markdown","source":["**Running decision tree again on the PCA data**"],"metadata":{"id":"iuu05cWOV-_l"}},{"cell_type":"code","source":["#split the dataset\n","from sklearn.model_selection import train_test_split\n","X_train, test_x, y_train, test_lab = train_test_split(X_pca,y,\n","                                                 test_size = 0.4,\n","                                                 random_state = 42)\n","clf = DecisionTreeClassifier(max_depth =3, random_state = 42)\n","clf.fit(X_train, y_train)\n","test_pred_decision_tree = clf.predict(test_x)\n","metrics.accuracy_score(test_lab, test_pred_decision_tree)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4eoxhdoITeOO","executionInfo":{"status":"ok","timestamp":1645569963102,"user_tz":300,"elapsed":240,"user":{"displayName":"Gray LeCompte","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13282743667567499117"}},"outputId":"ef06c773-723b-4cc3-913d-a3707548d9f4"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.95"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["pcal = PCA(n_components=4).fit(x)\n","X1_pca = pcal.transform(x)\n","print(pcal.explained_variance_ratio_)\n","print(sum(pcal.explained_variance_ratio_))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WvDyX3bUORGx","executionInfo":{"status":"ok","timestamp":1645569963103,"user_tz":300,"elapsed":4,"user":{"displayName":"Gray LeCompte","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13282743667567499117"}},"outputId":"7d512c91-803a-45cb-f8c0-480595c7193f"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.92461872 0.05306648 0.01710261 0.00521218]\n","1.0\n"]}]},{"cell_type":"code","source":["colors = cycle('rgb')\n","target_ids = range(len(iris.target_names))\n","pl.figure()\n","for i, c, label in zip(target_ids, colors, iris.target_names):\n","    pl.scatter(X_pca[iris.target==i,0], X_pca[iris.target==i,1],c=c,label=label)\n","pl.legend()\n","pl.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":268},"id":"Ms6WJkHIOTDZ","executionInfo":{"status":"ok","timestamp":1645569967886,"user_tz":300,"elapsed":288,"user":{"displayName":"Gray LeCompte","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13282743667567499117"}},"outputId":"ef7b4bba-c2a6-42db-b7b2-5e5adcb54519"},"execution_count":19,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":[""],"metadata":{"id":"ZWZUinqTTBLl"},"execution_count":null,"outputs":[]}]}